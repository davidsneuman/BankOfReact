{"ast":null,"code":"var _jsxFileName = \"/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/BankOfReact/src/components/Credits.js\";\n\n/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Credits extends Component {\n  constructor(props) {\n    // Create and initialize state\n    super(props);\n    this.state = {\n      accountBalance: this.props.accountBalance,\n      credits: this.props.credits,\n      debits: this.props.debits\n    };\n  } // Create the list of Debit items\n  //   creditsView = () => {\n  //     return this.credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n  //       let date = credit.date.slice(0,10);\n  //       return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n  //     }) \n  //   }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Credits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AccountBalance, {\n        accountBalance: this.props.accountBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.credits.map(credit => {\n          // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n          let date = credit.date.slice(0, 10);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [credit.amount, \" \", credit.description, \" \", date]\n          }, credit.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } // Make async API call to retrieve data from remote website\n\n\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits'; // Link to remote website API endpoint\n    // Await for promise (completion) returned from API call\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      console.log(response); // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        credits: response.data\n      }); // Store received data in state's \"users\" object\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  }\n\n} // const Credits = (props) => {\n//   return (\n//     <div>\n//       <h1>Credits</h1>\n//       <br/>\n//       <Link to=\"/\">Return to Home</Link>\n//     </div>\n//   )\n// }\n\n\nexport default Credits;","map":{"version":3,"sources":["/Users/davidneuman/OneDrive - Hunter - CUNY/COLLEGE/WEB DEVELOPMENT/BankOfReact/src/components/Credits.js"],"names":["Link","axios","Component","AccountBalance","Credits","constructor","props","state","accountBalance","credits","debits","render","map","credit","date","slice","amount","description","id","componentDidMount","linkToAPI","response","get","console","log","setState","data","error","status"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAAG;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cADhB;AAEXC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAFT;AAGXC,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAHR,KAAb;AAKD,GARyB,CASxB;AACR;AACA;AACA;AACA;AACA;AACA;;;AAEIC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,cAAc,EAAE,KAAKL,KAAL,CAAWE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAGM,KAAKC,OAAL,CAAaG,GAAb,CAAkBC,MAAD,IAAY;AAAG;AAC5B,cAAIC,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAoB,EAApB,CAAX;AACA,8BAAO;AAAA,uBAAqBF,MAAM,CAACG,MAA5B,OAAqCH,MAAM,CAACI,WAA5C,OAA0DH,IAA1D;AAAA,aAASD,MAAM,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAHH;AAHN;AAAA;AAAA;AAAA;AAAA,cAHF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAeE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH,GArC2B,CAuC1B;;;AACmB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,SAAS,GAAG,uCAAhB,CADwB,CACkC;AAE1D;;AACA,QAAI;AAAG;AACL,UAAIC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUF,SAAV,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAFE,CAEsB;AACxB;;AACA,WAAKI,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAAEY,QAAQ,CAACK;AAAnB,OAAd,EAJE,CAIwC;AAC3C,KALD,CAMA,OAAOC,KAAP,EAAc;AAAG;AACf,UAAIA,KAAK,CAACN,QAAV,EAAoB;AAClB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACN,QAAN,CAAeK,IAA3B,EAFkB,CAEiB;;AACnCH,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACN,QAAN,CAAeO,MAA3B,EAHkB,CAGmB;AACtC;AACF;AACF;;AAzD6B,C,CA2DhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAexB,OAAf","sourcesContent":["/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport AccountBalance from './AccountBalance';\n\nclass Credits extends Component {\n    constructor (props) {  // Create and initialize state\n        super(props)\n        this.state = {\n          accountBalance: this.props.accountBalance,\n          credits: this.props.credits,\n          debits: this.props.debits\n        }\n      }\n        // Create the list of Debit items\n//   creditsView = () => {\n//     return this.credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n//       let date = credit.date.slice(0,10);\n//       return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n//     }) \n//   }\n      \n    render() {\n        return (\n            <div>\n              <h1>Credits</h1>\n              <AccountBalance accountBalance={this.props.accountBalance}/>\n              <div>\n                {/* {this.creditsView} */}\n                {\n                    this.credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n                        let date = credit.date.slice(0,10);\n                        return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n                      })\n                }\n              </div>\n                \n              <br/>\n\n              <Link to=\"/\">Return to Home</Link>\n            </div>\n          )\n    }\n\n      // Make async API call to retrieve data from remote website\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API endpoint\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({credits: response.data});  // Store received data in state's \"users\" object\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n  }  \n}\n// const Credits = (props) => {\n//   return (\n//     <div>\n//       <h1>Credits</h1>\n//       <br/>\n//       <Link to=\"/\">Return to Home</Link>\n//     </div>\n//   )\n// }\n\nexport default Credits;"]},"metadata":{},"sourceType":"module"}