{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","className","src","alt","to","toFixed","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","handleDescriptionChange","updatedCreditInput","creditInput","description","handleAmountChange","amount","creditInfo","addCreditInfo","credits","id","map","credit","date","slice","step","Debits","updatedDebitInput","debitInput","debitInfo","addDebitInfo","debits","debit","App","logInInfo","newUser","currentUser","today","Date","getFullYear","parseInt","getMonth","getDate","newCreditInfo","parseFloat","uniqueId","newCreditList","creditList","push","newAccountBalance","newDebitInfo","newdebitList","debitList","addCredits","sumCredits","forEach","addDebits","sumDebits","basename","exact","path","render","a","axios","get","response","data","console","log","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a13bf944.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n        <ul className='App-header'>\n        <Link to=\"/userProfile\" className='App-link'>User Profile</Link>\n\n        <Link to=\"/login\" className='App-link'>Login</Link>\n\n        <Link to=\"/credits\" className='App-link'>Credits</Link>\n\n        <Link to=\"/debits\" className='App-link'>Debits</Link>\n        </ul>\n\n        <br/><br/>\n        <div className='App-header'>\n        <AccountBalance accountBalance={this.props.accountBalance.toFixed(2)}/>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport { Component } from 'react';\nimport AccountBalance from './AccountBalance';\n\nclass Credits extends Component {\n    constructor (props) {  // Create and initialize state\n        super(props)\n        this.state = {\n          accountBalance: this.props.accountBalance,\n          credits: this.props.credits,\n          creditInput: {\n            description: '',\n            amount: 0\n          }\n        }\n      }\n\n    // update description field\n    handleDescriptionChange = (e) => {\n        const updatedCreditInput = {...this.state.creditInput}\n        updatedCreditInput.description = e.target.value\n        this.setState({creditInput: updatedCreditInput})\n    }\n\n    // update amount field\n    handleAmountChange = (e) => {\n        const updatedCreditInput = {...this.state.creditInput}  \n        updatedCreditInput.amount = e.target.value \n        this.setState({creditInput: updatedCreditInput}) \n    }\n\n    handleSubmit = (creditInfo) => {\n        creditInfo.preventDefault()\n        this.props.addCreditInfo(this.state.creditInput)  // Update state in the top-level component (App.js)\n    }\n      \n    render() {\n        return (\n            <div>\n              <h1 className='App-header'>Credits</h1>\n              \n              <div id=\"credits\">\n                {\n                    // extract data from JSON\n                    this.state.credits.map( (credit) => { \n                        let date = credit.date.slice(0,10);  \n                        return (\n                            <li className='list-item' key={credit.id}>${credit.amount} {credit.description} {date}</li>\n                        )\n                        }\n                    )\n                }\n                <br/>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"description\" onChange={this.handleDescriptionChange}/>\n                    <input type=\"number\" step=\"0.01\"name=\"amount\" onChange={this.handleAmountChange}/>\n                    <button type=\"submit\">Add Credit</button>\n                </form>\n                <br/>\n                <div className='App-header'>\n                    <AccountBalance accountBalance={this.props.accountBalance.toFixed(2)}/>\n                </div>\n            </div>\n            <br/>\n            \n              <Link to=\"/\">Return to Home</Link>\n            </div>\n          )\n    }\n}\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport { Component } from 'react';\nimport AccountBalance from './AccountBalance';\n\nclass Debits extends Component {\n    constructor (props) {  // Create and initialize state\n        super(props)\n        this.state = {\n          accountBalance: this.props.accountBalance,\n          debits: this.props.debits,\n          debitInput: {\n            description: '',\n            amount: 0\n          }\n        }\n      }\n\n    // update description field\n    handleDescriptionChange = (e) => {\n        const updatedDebitInput = {...this.state.debitInput}\n        updatedDebitInput.description = e.target.value\n        this.setState({debitInput: updatedDebitInput})\n    }\n\n    // update amount field\n    handleAmountChange = (e) => {\n        const updatedDebitInput = {...this.state.debitInput}  \n        updatedDebitInput.amount = e.target.value \n        this.setState({debitInput: updatedDebitInput}) \n    }\n\n    handleSubmit = (debitInfo) => {\n        debitInfo.preventDefault()\n        this.props.addDebitInfo(this.state.debitInput)  // Update state in the top-level component (App.js)\n    }\n      \n    render() {\n        return (\n            <div>\n              <h1 className='App-header'>Debits</h1>\n\n              <div id=\"debits\">\n                {\n                    // extract data from JSON\n                    this.state.debits.map( (debit) => { \n                        let date = debit.date.slice(0,10);  \n                        return (\n                            <li key={debit.id}>${debit.amount} {debit.description} {date}</li>\n                        )\n                        }\n                    )\n                }\n                <br/>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"description\" onChange={this.handleDescriptionChange}/>\n                    <input type=\"number\" step=\"0.01\"name=\"amount\" onChange={this.handleAmountChange}/>\n                    <button type=\"submit\">Add Debit</button>\n                </form>\n                <br/>\n                <div className='App-header'>\n                    <AccountBalance accountBalance={this.props.accountBalance.toFixed(2)}/>\n                </div>\n                <br/>\n            </div>\n            <br/>\n            \n              <Link to=\"/\">Return to Home</Link>\n            </div>\n          )\n    }\n}\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      uniqueId: 0, //required for duplicate entries in credit/debit\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // add a new credit entry\n  addCreditInfo = (creditInfo) => {\n    let today = new Date()\n    let date = today.getFullYear() + '-' + parseInt(today.getMonth() + 1) + '-' + today.getDate() \n    const newCreditInfo = {\n        amount: parseFloat(creditInfo.amount),\n        date: date,\n        description: creditInfo.description,\n        id: this.state.uniqueId\n    }\n    var newCreditList = this.state.creditList\n    newCreditList.push(newCreditInfo)\n    const newAccountBalance = this.state.accountBalance + newCreditInfo.amount\n    this.setState({credits: newCreditList})\n    this.setState({accountBalance: newAccountBalance})\n    this.setState({uniqueId: this.state.uniqueId + 1})    \n  }\n\n    // add a new credit entry\n    addDebitInfo = (debitInfo) => {\n        let today = new Date()\n        let date = today.getFullYear() + '-' + parseInt(today.getMonth() + 1) + '-' + today.getDate() \n        const newDebitInfo = {\n            amount: parseFloat(debitInfo.amount),\n            date: date,\n            description: debitInfo.description,\n            id: this.state.uniqueId\n        }\n        var newdebitList = this.state.debitList\n        newdebitList.push(newDebitInfo)\n        const newAccountBalance = this.state.accountBalance - newDebitInfo.amount\n        this.setState({debits: newdebitList})\n        this.setState({accountBalance: newAccountBalance})\n        this.setState({uniqueId: this.state.uniqueId + 1})    \n      }\n\n  // sum credits\n  addCredits = () => {\n    var sumCredits = 0;\n    this.state.creditList.forEach((credit) => sumCredits += credit.amount)\n    this.setState({accountBalance: this.state.accountBalance + sumCredits})\n  }\n\n    // sum debits\n    addDebits = () => {\n        var sumDebits = 0;\n        this.state.debitList.forEach((debit) => sumDebits += debit.amount)\n        this.setState({accountBalance: this.state.accountBalance - sumDebits})\n      }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCreditInfo={this.addCreditInfo}/>)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebitInfo={this.addDebitInfo}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n\n        // Make async API call to retrieve data from remote website\n        async componentDidMount() {\n            //CREDIT API CALL\n            let creditEndpoint = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API endpoint\n        \n            // Await for promise (completion) returned from API call\n            try {  // Accept success response as array of JSON objects\n                let response = await axios.get(creditEndpoint);\n                // To get data object in the response, need to use \"response.data\"\n                this.setState({creditList: response.data}); \n                this.addCredits(); \n            } \n            catch (error) {  // Print out errors at console when there is an error response\n              if (error.response) {\n                // The request was made, and the server responded with error message and status code.\n                console.log(error.response.data);  // Print out error message (e.g., Not Found)\n                console.log(error.response.status);  // Print out error status code (e.g., 404)\n              }    \n            }\n\n\n            //DEBIT API CALL\n            let debitEndpoint = 'https://moj-api.herokuapp.com/debits';  // Link to remote website API endpoint\n        \n            // Await for promise (completion) returned from API call\n            try {  // Accept success response as array of JSON objects\n                let response = await axios.get(debitEndpoint);\n                // To get data object in the response, need to use \"response.data\"\n                this.setState({debitList: response.data}); \n                this.addDebits();\n            } \n            catch (error) {  // Print out errors at console when there is an error response\n              if (error.response) {\n                // The request was made, and the server responded with error message and status code.\n                console.log(error.response.data);  // Print out error message (e.g., Not Found)\n                console.log(error.response.status);  // Print out error status code (e.g., 404)\n              }    \n            }\n\n          }  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}